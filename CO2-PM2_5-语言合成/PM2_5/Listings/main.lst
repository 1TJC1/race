C51 COMPILER V9.00   MAIN                                                                  07/02/2024 14:45:45 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\KEIL4\C51\BIN\C51.EXE main.c LARGE BROWSE INCDIR(.\LCD;.\UART2) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          #include "intrins.h"
   3          #include "spi.h"
   4          #include "lcd.h"
   5          #include "lcd_init.h"
   6          #include "uart2.h"
   7          
   8          void led()
   9          {
  10   1              if(flag_updata==1)
  11   1              {
  12   2                      flag_updata=0;
  13   2                      LED1 = ~LED1;
  14   2              }
  15   1      }
  16          unsigned int PM2_5_data=0;
  17          unsigned int PM10_0_data=0;
  18          void read_PM_data()
  19          {
  20   1              static unsigned char PM2_5_value_pro=0;
  21   1              static unsigned char PM10_0_value_pro=0;
  22   1              static unsigned char cnt1_value=1;
  23   1              if(UART_CONFIG.ReceiveComplete==1)
  24   1              {
  25   2                      LED2 = ~LED2;
  26   2                      UART_CONFIG.ReceiveComplete=0;
  27   2                      
  28   2                      PM2_5_data=UART_CONFIG.ReceiveBuff[12]*256+UART_CONFIG.ReceiveBuff[13];
  29   2                      display_printf(20,145,GREEN,BLACK,16,0,"PM2.5:%5d",PM2_5_data);
  30   2      
  31   2                      PM10_0_data=UART_CONFIG.ReceiveBuff[14]*256+UART_CONFIG.ReceiveBuff[15];
  32   2                      display_printf(20,165,BLUE,BLACK,16,0,"PM10 :%5d",PM10_0_data);
  33   2                      
  34   2                      LCD_DrawLine(20+(cnt1_value-1),140-PM2_5_value_pro,20+cnt1_value,140-PM2_5_data,GREEN);//温度的折线图
  35   2                      PM2_5_value_pro=PM2_5_data;
  36   2                      
  37   2                      LCD_DrawLine(20+(cnt1_value-1),140-PM10_0_value_pro,20+cnt1_value,140-PM10_0_data,BLUE);//温度的折线图
  38   2                      PM10_0_value_pro=PM10_0_data;
  39   2                      
  40   2                      cnt1_value++;
  41   2                      if(cnt1_value>=180)
  42   2                      {
  43   3                              cnt1_value=1;
  44   3                              LCD_Fill( 20,40,200,140,BLACK);//清
  45   3                              
  46   3                              LCD_DrawLine(20,40,20,140,BROWN);               //坐标轴
  47   3                              LCD_DrawLine(20,140,200,140,BROWN);
  48   3                      }
  49   2              }
  50   1      }
  51          void main()
  52          {
  53   1          P0M0 = 0x00;
  54   1          P0M1 = 0x00;
C51 COMPILER V9.00   MAIN                                                                  07/02/2024 14:45:45 PAGE 2   

  55   1          P1M0 = 0x00;
  56   1          P1M1 = 0x00;
  57   1          P2M0 = 0x00;
  58   1          P2M1 = 0x00;
  59   1          P3M0 = 0x00;
  60   1          P3M1 = 0x00;
  61   1          P4M0 = 0x00;
  62   1          P4M1 = 0x00;
  63   1          P5M0 = 0x00;
  64   1          P5M1 = 0x00;
  65   1          P6M0 = 0x00;
  66   1          P6M1 = 0x00;
  67   1          P7M0 = 0x00;
  68   1          P7M1 = 0x00;
  69   1              
  70   1                      init_uart2();
  71   1                      init_time0();
  72   1                      
  73   1                      SPI_Init();
  74   1      
  75   1                      LCD_Init();//LCD初始化
  76   1                      LCD_Clear1(BLACK);
  77   1                      LCD_DrawLine(20,40,20,140,BROWN);               //坐标轴
  78   1                      LCD_DrawLine(20,140,200,140,BROWN);
  79   1      
  80   1          while(1)
  81   1                      {
  82   2                              led();
  83   2                              read_PM_data();
  84   2                      }
  85   1      }
  86          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    574    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =      7    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
