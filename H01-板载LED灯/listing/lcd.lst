C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\output\lcd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\listing\
                    -lcd.lst) TABS(2) OBJECT(.\output\lcd.obj)

line level    source

   1          #include "lcd.h"
   2          #include "lcd_init.h"
   3          #include "lcdfont.h"
   4          #include "spi.h"
   5          #include "stdio.h"
   6          #include "stdarg.h"
   7          #include <string.h>
   8          /******************************************************************************
   9                函数说明：LCD清屏函数
  10                入口数据：无
  11                返回值：  无
  12          ******************************************************************************/
  13          void LCD_Clear(u16 Color)
  14          {
  15   1          u16 i,j;
  16   1          LCD_Address_Set(0,0,LCD_W-1,LCD_H-1);
  17   1          for(i=0;i<LCD_W;i++)
  18   1          {
  19   2              for (j=0;j<LCD_H;j++)
  20   2              {
  21   3                  LCD_WR_DATA(Color);
  22   3              }
  23   2          }
  24   1      }
  25          void LCD_Clear1(u16 Color)  //快速刷新清屏
  26          {
  27   1          u16 i,k;
  28   1          u8 Image[LCD_W*2];
  29   1          for(k=0;k<LCD_W*2;k+=2)
  30   1          {
  31   2              Image[k+1] = ((Color)&0x0ff);
  32   2              Image[k] = ((Color>>8)&0x0ff);
  33   2          }
  34   1          LCD_Address_Set(0,0,LCD_W-1,LCD_H-1);
  35   1      
  36   1          for(i=0;i<LCD_H;i++)
  37   1          {
  38   2              LCD_DC_Set();//写数据
  39   2      
  40   2              LCD_CS_Clr();
  41   2          SPI_SendData((u8 *)&Image[0], LCD_W*2);
  42   2              LCD_CS_Set();
  43   2          }
  44   1      }
  45          /******************************************************************************
  46                函数说明：在指定区域填充颜色
  47                入口数据：xsta,ysta   起始坐标
  48                          xend,yend   终止坐标
  49                                          color       要填充的颜色
  50                返回值：  无
  51          ******************************************************************************/
  52          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
  53          {          
  54   1          u16 i,j;
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 2   

  55   1          LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
  56   1          for(i=ysta;i<yend;i++)
  57   1          {
  58   2              for(j=xsta;j<xend;j++)
  59   2              {
  60   3                  LCD_WR_DATA(color);
  61   3              }
  62   2          }
  63   1      }
  64          
  65          /******************************************************************************
  66                函数说明：在指定位置画点
  67                入口数据：x,y 画点坐标
  68                          color 点的颜色
  69                返回值：  无
  70          ******************************************************************************/
  71          void LCD_DrawPoint(u16 x,u16 y,u16 color)
  72          {
  73   1          LCD_Address_Set(x,y,x,y);//设置光标位置
  74   1          LCD_WR_DATA(color);
  75   1      } 
  76          
  77          
  78          /******************************************************************************
  79                函数说明：画线
  80                入口数据：x1,y1   起始坐标
  81                          x2,y2   终止坐标
  82                          color   线的颜色
  83                返回值：  无
  84          ******************************************************************************/
  85          void LCD_DrawLine(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
  86          {
  87   1          u16 t;
  88   1          int xerr=0,yerr=0,delta_x,delta_y,distance;
  89   1          int incx,incy,uRow,uCol;
  90   1          delta_x=x2-x1; //计算坐标增量
  91   1          delta_y=y2-y1;
  92   1          uRow=x1;//画线起点坐标
  93   1          uCol=y1;
  94   1          if(delta_x>0)incx=1; //设置单步方向
  95   1          else if (delta_x==0)incx=0;//垂直线
  96   1          else {incx=-1;delta_x=-delta_x;}
  97   1          if(delta_y>0)incy=1;
  98   1          else if (delta_y==0)incy=0;//水平线
  99   1          else {incy=-1;delta_y=-delta_y;}
 100   1          if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴
 101   1          else distance=delta_y;
 102   1          for(t=0;t<distance+1;t++)
 103   1          {
 104   2              LCD_DrawPoint(uRow,uCol,color);//画点
 105   2              xerr+=delta_x;
 106   2              yerr+=delta_y;
 107   2              if(xerr>distance)
 108   2              {
 109   3                  xerr-=distance;
 110   3                  uRow+=incx;
 111   3              }
 112   2              if(yerr>distance)
 113   2              {
 114   3                  yerr-=distance;
 115   3                  uCol+=incy;
 116   3              }
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 3   

 117   2          }
 118   1      }
 119          
 120          
 121          /******************************************************************************
 122                函数说明：画矩形
 123                入口数据：x1,y1   起始坐标
 124                          x2,y2   终止坐标
 125                          color   矩形的颜色
 126                返回值：  无
 127          ******************************************************************************/
 128          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
 129          {
 130   1          LCD_DrawLine(x1,y1,x2,y1,color);
 131   1          LCD_DrawLine(x1,y1,x1,y2,color);
 132   1          LCD_DrawLine(x1,y2,x2,y2,color);
 133   1          LCD_DrawLine(x2,y1,x2,y2,color);
 134   1      }
 135          
 136          
 137          /******************************************************************************
 138                函数说明：画圆
 139                入口数据：x0,y0   圆心坐标
 140                          r       半径
 141                          color   圆的颜色
 142                返回值：  无
 143          ******************************************************************************/
 144          void Draw_Circle(u16 x0,u16 y0,u8 r,u16 color)
 145          {
 146   1          int a,b;
 147   1          a=0;b=r;
 148   1          while(a<=b)
 149   1          {
 150   2              LCD_DrawPoint(x0-b,y0-a,color);             //3
 151   2              LCD_DrawPoint(x0+b,y0-a,color);             //0
 152   2              LCD_DrawPoint(x0-a,y0+b,color);             //1
 153   2              LCD_DrawPoint(x0-a,y0-b,color);             //2
 154   2              LCD_DrawPoint(x0+b,y0+a,color);             //4
 155   2              LCD_DrawPoint(x0+a,y0-b,color);             //5
 156   2              LCD_DrawPoint(x0+a,y0+b,color);             //6
 157   2              LCD_DrawPoint(x0-b,y0+a,color);             //7
 158   2              a++;
 159   2              if((a*a+b*b)>(r*r))//判断要画的点是否过远
 160   2              {
 161   3                  b--;
 162   3              }
 163   2          }
 164   1      }
 165          
 166          /******************************************************************************
 167                函数说明：显示汉字串
 168                入口数据：x,y显示坐标
 169                          *s 要显示的汉字串
 170                          fc 字的颜色
 171                          bc 字的背景色
 172                          sizey 字号 可选 16 24 32
 173                          mode:  0非叠加模式  1叠加模式
 174                返回值：  无
 175          ******************************************************************************/
 176          void LCD_ShowChinese(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
 177          {
 178   1          while(*s!=0)
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 4   

 179   1          {
 180   2              if(sizey==12) LCD_ShowChinese12x12(x,y,s,fc,bc,sizey,mode);
 181   2              else if(sizey==16) LCD_ShowChinese16x16(x,y,s,fc,bc,sizey,mode);
 182   2              else if(sizey==24) LCD_ShowChinese24x24(x,y,s,fc,bc,sizey,mode);
 183   2              else if(sizey==32) LCD_ShowChinese32x32(x,y,s,fc,bc,sizey,mode);
 184   2              else return;
 185   2              s+=2;
 186   2              x+=sizey;
 187   2          }
 188   1      }
 189          
 190          /******************************************************************************
 191                函数说明：显示单个12x12汉字
 192                入口数据：x,y显示坐标
 193                          *s 要显示的汉字
 194                          fc 字的颜色
 195                          bc 字的背景色
 196                          sizey 字号
 197                          mode:  0非叠加模式  1叠加模式
 198                返回值：  无
 199          ******************************************************************************/
 200          void LCD_ShowChinese12x12(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
 201          {
 202   1          u8 i,j,m=0;
 203   1          u16 k;
 204   1          u16 HZnum;//汉字数目
 205   1          u16 TypefaceNum;//一个字符所占字节大小
 206   1          u16 x0=x;
 207   1          u8 a[16];
 208   1          TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
 209   1      
 210   1          HZnum=sizeof(tfont12)/sizeof(typFNT_GB12);  //统计汉字数目
 211   1          for(k=0;k<HZnum;k++)
 212   1          {
 213   2              if((tfont12[k].Index[0]==*(s))&&(tfont12[k].Index[1]==*(s+1)))
 214   2              {
 215   3                  LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
 216   3                  for(i=0;i<TypefaceNum;i++)
 217   3                  {
 218   4                      for(j=0;j<8;j++)
 219   4                      {
 220   5                          if(!mode)//非叠加方式
 221   5                          {
 222   6                              if(tfont12[k].Msk[i]&(0x01<<j)){a[2*j]=(u8)((fc>>8)&0XFF);a[2*j+1]=(u8)(fc&0XFF);}
             -//LCD_WR_DATA(fc);
 223   6                              else {a[2*j]=(u8)((bc>>8)&0XFF);a[2*j+1]=(u8)(bc&0XFF);}//LCD_WR_DATA(bc);
 224   6                              m++;
 225   6                              if(m%sizey==0)
 226   6                              {
 227   7                                  m=0;
 228   7                                  break;
 229   7                              }
 230   6                          }
 231   5                          else//叠加方式
 232   5                          {
 233   6                              if(tfont12[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
 234   6                              x++;
 235   6                              if((x-x0)==sizey)
 236   6                              {
 237   7                                  x=x0;
 238   7                                  y++;
 239   7                                  break;
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 5   

 240   7                              }
 241   6                          }
 242   5                      }
 243   4                      if(!mode)
 244   4                      {
 245   5                          LCD_DC_Set();//写数据
 246   5                          LCD_CS_Clr();
 247   5                          SPI_SendData((u8 *)&a[0], 16);
 248   5      //                    HAL_SPI_Transmit(&hspi1, (u8 *)&a[0], 16,100);
 249   5                          LCD_CS_Set();
 250   5                      }
 251   4                  }
 252   3              }
 253   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 254   2          }
 255   1      } 
 256          
 257          /******************************************************************************
 258                函数说明：显示单个16x16汉字
 259                入口数据：x,y显示坐标
 260                          *s 要显示的汉字
 261                          fc 字的颜色
 262                          bc 字的背景色
 263                          sizey 字号
 264                          mode:  0非叠加模式  1叠加模式
 265                返回值：  无
 266          ******************************************************************************/
 267          void LCD_ShowChinese16x16(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
 268          {
 269   1          u8 i,j,m=0;
 270   1          u16 k;
 271   1          u16 HZnum;//汉字数目
 272   1          u16 TypefaceNum;//一个字符所占字节大小
 273   1          u16 x0=x;
 274   1          u8 a[16];
 275   1        TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
 276   1          HZnum=sizeof(tfont16)/sizeof(typFNT_GB16);  //统计汉字数目
 277   1          for(k=0;k<HZnum;k++)
 278   1          {
 279   2              if ((tfont16[k].Index[0]==*(s))&&(tfont16[k].Index[1]==*(s+1)))
 280   2              {
 281   3                  LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
 282   3                  for(i=0;i<TypefaceNum;i++)
 283   3                  {
 284   4                      for(j=0;j<8;j++)
 285   4                      {
 286   5                          if(!mode)//非叠加方式
 287   5                          {
 288   6                              if(tfont16[k].Msk[i]&(0x01<<j)){a[2*j]=(u8)((fc>>8)&0XFF);a[2*j+1]=(u8)(fc&0XFF);}
             -//LCD_WR_DATA(fc);
 289   6                              else {a[2*j]=(u8)((bc>>8)&0XFF);a[2*j+1]=(u8)(bc&0XFF);}//LCD_WR_DATA(bc);
 290   6                              m++;
 291   6                              if(m%sizey==0)
 292   6                              {
 293   7                                  m=0;
 294   7                                  break;
 295   7                              }
 296   6                          }
 297   5                          else//叠加方式
 298   5                          {
 299   6                              if(tfont16[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
 300   6                              x++;
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 6   

 301   6                              if((x-x0)==sizey)
 302   6                              {
 303   7                                  x=x0;
 304   7                                  y++;
 305   7                                  break;
 306   7                              }
 307   6                          }
 308   5                      }
 309   4                      if(!mode)
 310   4                      {
 311   5                          LCD_DC_Set();//写数据
 312   5                          LCD_CS_Clr();
 313   5                          SPI_SendData((u8 *)&a[0], 16);
 314   5      //                    HAL_SPI_Transmit(&hspi1, (u8 *)&a[0], 16,100);
 315   5                          LCD_CS_Set();
 316   5                      }
 317   4                  }
 318   3              }
 319   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 320   2          }
 321   1      } 
 322          /******************************************************************************
 323                函数说明：显示单个24x24汉字
 324                入口数据：x,y显示坐标
 325                          *s 要显示的汉字
 326                          fc 字的颜色
 327                          bc 字的背景色
 328                          sizey 字号
 329                          mode:  0非叠加模式  1叠加模式
 330                返回值：  无
 331          ******************************************************************************/
 332          void LCD_ShowChinese24x24(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
 333          {
 334   1          u8 i,j,m=0;
 335   1          u16 k;
 336   1          u16 HZnum;//汉字数目
 337   1          u16 TypefaceNum;//一个字符所占字节大小
 338   1          u16 x0=x;
 339   1          u8 a[16];
 340   1          TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
 341   1          HZnum=sizeof(tfont24)/sizeof(typFNT_GB24);  //统计汉字数目
 342   1          for(k=0;k<HZnum;k++)
 343   1          {
 344   2              if ((tfont24[k].Index[0]==*(s))&&(tfont24[k].Index[1]==*(s+1)))
 345   2              {
 346   3                  LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
 347   3                  for(i=0;i<TypefaceNum;i++)
 348   3                  {
 349   4                      for(j=0;j<8;j++)
 350   4                      {
 351   5                          if(!mode)//非叠加方式
 352   5                          {
 353   6                              if(tfont24[k].Msk[i]&(0x01<<j)){a[2*j]=(u8)((fc>>8)&0XFF);a[2*j+1]=(u8)(fc&0XFF);}
             -//LCD_WR_DATA(fc);
 354   6                              else {a[2*j]=(u8)((bc>>8)&0XFF);a[2*j+1]=(u8)(bc&0XFF);}//LCD_WR_DATA(bc);
 355   6                              m++;
 356   6                              if(m%sizey==0)
 357   6                              {
 358   7                                  m=0;
 359   7                                  break;
 360   7                              }
 361   6                          }
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 7   

 362   5                          else//叠加方式
 363   5                          {
 364   6                              if(tfont24[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
 365   6                              x++;
 366   6                              if((x-x0)==sizey)
 367   6                              {
 368   7                                  x=x0;
 369   7                                  y++;
 370   7                                  break;
 371   7                              }
 372   6                          }
 373   5                      }
 374   4                      if(!mode)
 375   4                      {
 376   5                          LCD_DC_Set();//写数据
 377   5                          LCD_CS_Clr();
 378   5                          SPI_SendData((u8 *)&a[0], 16);
 379   5      //                    HAL_SPI_Transmit(&hspi1, (u8 *)&a[0], 16,100);
 380   5                          LCD_CS_Set();
 381   5                      }
 382   4                  }
 383   3              }
 384   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 385   2          }
 386   1      } 
 387          
 388          /******************************************************************************
 389                函数说明：显示单个32x32汉字
 390                入口数据：x,y显示坐标
 391                          *s 要显示的汉字
 392                          fc 字的颜色
 393                          bc 字的背景色
 394                          sizey 字号
 395                          mode:  0非叠加模式  1叠加模式
 396                返回值：  无
 397          ******************************************************************************/
 398          void LCD_ShowChinese32x32(u16 x,u16 y,u8 *s,u16 fc,u16 bc,u8 sizey,u8 mode)
 399          {
 400   1          u8 i,j,m=0;
 401   1          u16 k;
 402   1          u16 HZnum;//汉字数目
 403   1          u16 TypefaceNum;//一个字符所占字节大小
 404   1          u16 x0=x;
 405   1          u8 a[16];
 406   1          TypefaceNum=(sizey/8+((sizey%8)?1:0))*sizey;
 407   1          HZnum=sizeof(tfont32)/sizeof(typFNT_GB32);  //统计汉字数目
 408   1          for(k=0;k<HZnum;k++)
 409   1          {
 410   2              if ((tfont32[k].Index[0]==*(s))&&(tfont32[k].Index[1]==*(s+1)))
 411   2              {
 412   3                  LCD_Address_Set(x,y,x+sizey-1,y+sizey-1);
 413   3                  for(i=0;i<TypefaceNum;i++)
 414   3                  {
 415   4                      for(j=0;j<8;j++)
 416   4                      {
 417   5                          if(!mode)//非叠加方式
 418   5                          {
 419   6                              if(tfont32[k].Msk[i]&(0x01<<j)){a[2*j]=(u8)((fc>>8)&0XFF);a[2*j+1]=(u8)(fc&0XFF);}
             -//
 420   6                              else {a[2*j]=(u8)((bc>>8)&0XFF);a[2*j+1]=(u8)(bc&0XFF);}//
 421   6                              m++;
 422   6                              if(m%sizey==0)
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 8   

 423   6                              {
 424   7                                  m=0;
 425   7                                  break;
 426   7                              }
 427   6                          }
 428   5                          else//叠加方式
 429   5                          {
 430   6                              if(tfont32[k].Msk[i]&(0x01<<j)) LCD_DrawPoint(x,y,fc);//画一个点
 431   6                              x++;
 432   6                              if((x-x0)==sizey)
 433   6                              {
 434   7                                  x=x0;
 435   7                                  y++;
 436   7                                  break;
 437   7                              }
 438   6                          }
 439   5                      }
 440   4                      if(!mode)
 441   4                      {
 442   5                          LCD_DC_Set();//写数据
 443   5                          LCD_CS_Clr();
 444   5                          SPI_SendData((u8 *)&a[0], 16);
 445   5      //                    HAL_SPI_Transmit(&hspi1, (u8 *)&a[0], 16,100);
 446   5                          LCD_CS_Set();
 447   5                      }
 448   4                  }
 449   3              }
 450   2              continue;  //查找到对应点阵字库立即退出，防止多个汉字重复取模带来影响
 451   2          }
 452   1      }
 453          /******************************************************************************
 454                函数说明：显示单个字符
 455                入口数据：x,y显示坐标
 456                          num 要显示的字符
 457                          fc 字的颜色
 458                          bc 字的背景色
 459                          sizey 字号
 460                          mode:  0非叠加模式  1叠加模式
 461                返回值：  无
 462          ******************************************************************************/
 463          void LCD_ShowChar(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
 464          {
 465   1          u8 temp,sizex,t,m=0;
 466   1          u16 i,TypefaceNum;//一个字符所占字节大小
 467   1          u16 x0=x;
 468   1          u8 a[16];
 469   1          sizex=sizey/2;
 470   1          TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
 471   1          num=num-' ';    //得到偏移后的值
 472   1          LCD_Address_Set(x,y,x+sizex-1,y+sizey-1);  //设置光标位置
 473   1          for(i=0;i<TypefaceNum;i++)
 474   1          {
 475   2              if(sizey==16)temp=ascii_1608[num][i];              //调用6x12字体
 476   2              //else if(sizey==16)temp=ascii_1608[num][i];       //调用8x16字体
 477   2              else if(sizey==24)temp=ascii_2412[num][i];       //调用12x24字体
 478   2             // else if(sizey==32)temp=ascii_3216[num][i];       //调用16x32字体
 479   2              else return;
 480   2              for(t=0;t<8;t++)
 481   2              {
 482   3                  if(!mode)//非叠加模式
 483   3                  {
 484   4                      if(sizex%8==0)
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 9   

 485   4                      {
 486   5                          if(temp&(0x01<<t)){a[2*t]=(u8)((fc>>8)&0XFF);a[2*t+1]=(u8)(fc&0XFF);}//LCD_WR_DATA(fc)
             -;
 487   5                          else {a[2*t]=(u8)((bc>>8)&0XFF);a[2*t+1]=(u8)(bc&0XFF);}//LCD_WR_DATA(bc);
 488   5                          m++;
 489   5                          if(m%sizex==0)
 490   5                          {
 491   6                              m=0;
 492   6                              break;
 493   6                          }
 494   5                      }
 495   4                      else
 496   4                      {
 497   5                          if(temp&(0x01<<t))LCD_WR_DATA(fc);
 498   5                          else LCD_WR_DATA(bc);
 499   5                          m++;
 500   5                          if(m%sizex==0)
 501   5                          {
 502   6                              m=0;
 503   6                              break;
 504   6                          }
 505   5      
 506   5                      }
 507   4                  }
 508   3                  else//叠加模式
 509   3                  {
 510   4                      if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
 511   4                      x++;
 512   4                      if((x-x0)==sizex)
 513   4                      {
 514   5                          x=x0;
 515   5                          y++;
 516   5                          break;
 517   5                      }
 518   4                  }
 519   3              }
 520   2              if(sizex%8==0)
 521   2              {
 522   3                  if(!mode)//非叠加模式
 523   3                  {
 524   4                      LCD_DC_Set();//写数据
 525   4                      LCD_CS_Clr();
 526   4                      SPI_SendData((u8 *)&a[0], 16);
 527   4      //                HAL_SPI_Transmit(&hspi1, (u8 *)&a[0], 16,100);
 528   4                      LCD_CS_Set() ;
 529   4                  }
 530   3              }
 531   2          }
 532   1      }
 533          /******************************************************************************
 534                函数说明：显示字符串
 535                入口数据：x,y显示坐标
 536                          *p 要显示的字符串
 537                          fc 字的颜色
 538                          bc 字的背景色
 539                          sizey 字号
 540                          mode:  0非叠加模式  1叠加模式
 541                返回值：  无
 542          ******************************************************************************/
 543          void LCD_ShowString(u16 x,u16 y,const u8 *p,u16 fc,u16 bc,u8 sizey,u8 mode)
 544          {         
 545   1          while(*p!='\0')
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 10  

 546   1          {
 547   2              LCD_ShowChar(x,y,*p,fc,bc,sizey,mode);
 548   2              x+=sizey/2;
 549   2              p++;
 550   2          }
 551   1      }
 552          /******************************************************************************
 553                函数说明：显示数字
 554                入口数据：m底数，n指数
 555                返回值：  无
 556          ******************************************************************************/
 557          u32 mypow(u8 m,u8 n)
 558          {
 559   1          u32 result=1;
 560   1          while(n--)result*=m;
 561   1          return result;
 562   1      }
 563          /******************************************************************************
 564                函数说明：显示整数变量
 565                入口数据：x,y显示坐标
 566                          num 要显示整数变量
 567                          len 要显示的位数
 568                          fc 字的颜色
 569                          bc 字的背景色
 570                          sizey 字号
 571                返回值：  无
 572          ******************************************************************************/
 573          void LCD_ShowIntNum(u16 x,u16 y,u16 num,u8 len,u16 fc,u16 bc,u8 sizey)
 574          {
 575   1          u8 t,temp;
 576   1          u8 enshow=0;
 577   1          u8 sizex=sizey/2;
 578   1          for(t=0;t<len;t++)
 579   1          {
 580   2              temp=(num/mypow(10,len-t-1))%10;
 581   2              if(enshow==0&&t<(len-1))
 582   2              {
 583   3                  if(temp==0)
 584   3                  {
 585   4                      LCD_ShowChar(x+t*sizex,y,' ',fc,bc,sizey,0);
 586   4                      continue;
 587   4                  }else enshow=1;
 588   3      
 589   3              }
 590   2              LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 591   2          }
 592   1      } 
 593          /******************************************************************************
 594                函数说明：显示两位小数变量
 595                入口数据：x,y显示坐标
 596                          num 要显示小数变量
 597                          len 要显示的位数
 598                          fc 字的颜色
 599                          bc 字的背景色
 600                          sizey 字号
 601                返回值：  无
 602          ******************************************************************************/
 603          void LCD_ShowFloatNum1(u16 x,u16 y,float num,u8 len,u16 fc,u16 bc,u8 sizey)
 604          {
 605   1          u8 t,temp,sizex;
 606   1          u16 num1;
 607   1          sizex=sizey/2;
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 11  

 608   1          num1=num*100;
 609   1          for(t=0;t<len;t++)
 610   1          {
 611   2              temp=(num1/mypow(10,len-t-1))%10;
 612   2              if(t==(len-2))
 613   2              {
 614   3                  LCD_ShowChar(x+(len-2)*sizex,y,'.',fc,bc,sizey,0);
 615   3                  t++;
 616   3                  len+=1;
 617   3              }
 618   2              LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
 619   2          }
 620   1      }
 621          /******************************************************************************
 622                函数说明：显示图片
 623                入口数据：x,y起点坐标
 624                          length 图片长度
 625                          width  图片宽度
 626                          pic[]  图片数组
 627                返回值：  无
 628          ******************************************************************************/
 629          void LCD_ShowPicture(u16 x,u16 y,u16 length,u16 width,const u8 pic[])
 630          {
 631   1          u16 i,j;
 632   1          u32 k=0;
 633   1          LCD_Address_Set(x,y,x+length-1,y+width-1);
 634   1          for(i=0;i<length;i++)
 635   1          {
 636   2              for(j=0;j<width;j++)
 637   2              {
 638   3                  LCD_WR_DATA8(pic[k*2]);
 639   3                  LCD_WR_DATA8(pic[k*2+1]);
 640   3                  k++;
 641   3              }
 642   2          }
 643   1      }
 644          void display_graphic(u16 page,u16 column,u8 *dp,u16 fc,u16 bc,u8 sizey,u8 mode)  //显示一串8*16的字符或者1
             -6*16的汉字
 645          {
 646   1          u8 i;
 647   1          for (i=0;dp[i]!='\0';i++)
 648   1          {
 649   2              if (dp[i]<0x80)
 650   2              {
 651   3                  LCD_ShowString(page,column,dp+i,fc,bc,sizey,mode);
 652   3                  page+=sizey/2;
 653   3              }
 654   2              else
 655   2              {
 656   3                  LCD_ShowChinese(page,column,dp+i,fc,bc,sizey,mode);
 657   3                  page+=sizey;i++;
 658   3              }
 659   2          }
 660   1      }
 661          void display_printf(u16  page,u16 column,u16 fc,u16 bc,u8 sizey,u8 mode,char* val,...)
 662          {
 663   1          char a[30];
 664   1      
 665   1          va_list arg;
 666   1          va_start(arg, val);
 667   1          vsprintf(a, val, arg);
 668   1          va_end(arg);
C51 COMPILER V9.60.7.0   LCD                                                               12/12/2024 19:11:29 PAGE 12  

 669   1          display_graphic(page,column,(u8 *)a,fc,bc,sizey,mode);
 670   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   7126    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   6776     942
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
