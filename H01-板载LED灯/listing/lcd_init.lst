C51 COMPILER V9.60.7.0   LCD_INIT                                                          12/12/2024 19:08:57 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD_INIT
OBJECT MODULE PLACED IN .\output\lcd_init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lcd_init.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\lis
                    -ting\lcd_init.lst) TABS(2) OBJECT(.\output\lcd_init.obj)

line level    source

   1          #include "lcd_init.h"
   2          #include "spi.h"
   3          #include "intrins.h"
   4          
   5          /******************************************************************************
   6                函数说明：ms级延时
   7                入口数据：x 要延时的时间
   8                返回值：  无
   9          ******************************************************************************/
  10          void Delayxms(unsigned int x) //@11.0592MHz
  11          {
  12   1        unsigned char data i, j;
  13   1        while(--x)
  14   1        {
  15   2          _nop_();
  16   2          _nop_();
  17   2          _nop_();
  18   2          i = 11;
  19   2          j = 190;
  20   2          do
  21   2          {
  22   3            while (--j);
  23   3          } while (--i);
  24   2        }
  25   1      }
  26          /******************************************************************************
  27                函数说明：LCD串行数据写入函数
  28                入口数据：dat  要写入的串行数据
  29                返回值：  无
  30          ******************************************************************************/
  31          void LCD_Writ_Bus(u8 dat) 
  32          {
  33   1          LCD_CS_Clr();
  34   1          SPI_SendByte(dat);
  35   1      //    SPI_SendData(&dat, 1);
  36   1      //    HAL_SPI_Transmit(&userSPI,&dat,1,0xffff);
  37   1      //  HAL_SPI_Transmit_DMA(&userSPI,&dat,1);
  38   1          LCD_CS_Set();
  39   1      }
  40          /******************************************************************************
  41                函数说明：LCD写入数据
  42                入口数据：dat 写入的数据
  43                返回值：  无
  44          ******************************************************************************/
  45          void LCD_WR_DATA8(u8 dat)
  46          {
  47   1          LCD_DC_Set();//写数据
  48   1          LCD_CS_Clr();
  49   1          SPI_SendByte(dat);
  50   1      //    SPI_SendData(&dat, 1);
  51   1      //    HAL_SPI_Transmit(&userSPI, &dat, 1, 0xffff);
  52   1      //  HAL_SPI_Transmit_DMA(&userSPI, &dat, 1);
  53   1          LCD_CS_Set() ;
  54   1      
C51 COMPILER V9.60.7.0   LCD_INIT                                                          12/12/2024 19:08:57 PAGE 2   

  55   1      }
  56          
  57          /******************************************************************************
  58                函数说明：LCD写入数据
  59                入口数据：dat 写入的数据
  60                返回值：  无
  61          ******************************************************************************/
  62          void LCD_WR_DATA(u16 dat)
  63          {
  64   1          u8 a[2];
  65   1      
  66   1          a[0] = dat>>8;
  67   1          a[1] = (u8)dat;
  68   1      
  69   1          LCD_DC_Set();//写数据
  70   1          LCD_CS_Clr();
  71   1          SPI_SendByte(a[0]);
  72   1          SPI_SendByte(a[1]);
  73   1      //    SPI_SendData(a, 2);
  74   1      //    HAL_SPI_Transmit(&userSPI, a, 2, 0x1000);
  75   1      //  HAL_SPI_Transmit_DMA(&userSPI, a, 2);
  76   1          LCD_CS_Set() ;
  77   1      
  78   1      }
  79          
  80          /******************************************************************************
  81                函数说明：LCD写入命令
  82                入口数据：dat 写入的命令
  83                返回值：  无
  84          ******************************************************************************/
  85          void LCD_WR_REG(u8 dat)
  86          {
  87   1          LCD_DC_Clr();//写命令
  88   1          LCD_Writ_Bus(dat);
  89   1          LCD_DC_Set();//写数据
  90   1      }
  91          
  92          /******************************************************************************
  93                函数说明：设置起始和结束地址
  94                入口数据：x1,x2 设置列的起始和结束地址
  95                          y1,y2 设置行的起始和结束地址
  96                返回值：  无
  97          ******************************************************************************/
  98          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
  99          {
 100   1          if(USE_HORIZONTAL==0)
 101   1          {
 102   2              LCD_WR_REG(0x2a);//列地址设置
 103   2              LCD_WR_DATA(x1);
 104   2              LCD_WR_DATA(x2);
 105   2              LCD_WR_REG(0x2b);//行地址设置
 106   2              LCD_WR_DATA(y1);
 107   2              LCD_WR_DATA(y2);
 108   2              LCD_WR_REG(0x2c);//储存器写
 109   2          }
 110   1          else if(USE_HORIZONTAL==1)
 111   1          {
 112   2              LCD_WR_REG(0x2a);//列地址设置
 113   2              LCD_WR_DATA(x1);
 114   2              LCD_WR_DATA(x2);
 115   2              LCD_WR_REG(0x2b);//行地址设置
 116   2              LCD_WR_DATA(y1);
C51 COMPILER V9.60.7.0   LCD_INIT                                                          12/12/2024 19:08:57 PAGE 3   

 117   2              LCD_WR_DATA(y2);
 118   2              LCD_WR_REG(0x2c);//储存器写
 119   2          }
 120   1          else if(USE_HORIZONTAL==2)
 121   1          {
 122   2              LCD_WR_REG(0x2a);//列地址设置
 123   2              LCD_WR_DATA(x1);
 124   2              LCD_WR_DATA(x2);
 125   2              LCD_WR_REG(0x2b);//行地址设置
 126   2              LCD_WR_DATA(y1);
 127   2              LCD_WR_DATA(y2);
 128   2              LCD_WR_REG(0x2c);//储存器写
 129   2          }
 130   1          else
 131   1          {
 132   2              LCD_WR_REG(0x2a);//列地址设置
 133   2              LCD_WR_DATA(x1);
 134   2              LCD_WR_DATA(x2);
 135   2              LCD_WR_REG(0x2b);//行地址设置
 136   2              LCD_WR_DATA(y1);
 137   2              LCD_WR_DATA(y2);
 138   2              LCD_WR_REG(0x2c);//储存器写
 139   2          }
 140   1      }
 141           
 142          void LCD_Init(void)
 143          {
 144   1          LCD_RES_Clr();//复位
 145   1          Delayxms(100);
 146   1          LCD_RES_Set();
 147   1          Delayxms(100);
 148   1      
 149   1          LCD_BLK_Set();//打开背光
 150   1        Delayxms(100);
 151   1      
 152   1          LCD_WR_REG(0x11);                                             //无此指令，不能正常初始化芯片，无显示
 153   1          Delayxms(120);
 154   1          LCD_WR_REG(0x36);                                             //设置内存扫描方向，0X00正常扫描，从上往
             -下，从左往右，RGB方式
 155   1          if(USE_HORIZONTAL==0)LCD_WR_DATA8(0x00);
 156   1          else if(USE_HORIZONTAL==1)LCD_WR_DATA8(0xC0);
 157   1          else if(USE_HORIZONTAL==2)LCD_WR_DATA8(0x70);
 158   1          else LCD_WR_DATA8(0xA0);
 159   1      
 160   1          LCD_WR_REG(0x3A);                                             //数据格式，65K色,565
 161   1          LCD_WR_DATA8(0x05);
 162   1      
 163   1          LCD_WR_REG(0xB2);                                             //帧频设置
 164   1          LCD_WR_DATA8(0x0C);
 165   1          LCD_WR_DATA8(0x0C);
 166   1          LCD_WR_DATA8(0x00);
 167   1          LCD_WR_DATA8(0x33);
 168   1          LCD_WR_DATA8(0x33);
 169   1      
 170   1          LCD_WR_REG(0xB7);                                             //GATE 设置
 171   1          LCD_WR_DATA8(0x35);
 172   1      
 173   1          LCD_WR_REG(0xBB);                                             //VCOM设置
 174   1          LCD_WR_DATA8(0x19);
 175   1      
 176   1          LCD_WR_REG(0xC0);                                             //LCM设置,默认0x2c
 177   1          LCD_WR_DATA8(0x2C);
C51 COMPILER V9.60.7.0   LCD_INIT                                                          12/12/2024 19:08:57 PAGE 4   

 178   1      
 179   1          LCD_WR_REG(0xC2);                                             //VDV&VRH SET ,默认0x01
 180   1          LCD_WR_DATA8(0x01);
 181   1      
 182   1          LCD_WR_REG(0xC3);                                             //VRHS SET，默认0x0b
 183   1          LCD_WR_DATA8(0x12);                                           //此处根据实际情况修正
 184   1      
 185   1          LCD_WR_REG(0xC4);                                             //VDV SET，默认0x20
 186   1          LCD_WR_DATA8(0x20);
 187   1      
 188   1          LCD_WR_REG(0xC6);                                             // FR SET, 默认0x0F
 189   1          LCD_WR_DATA8(0x0F);
 190   1      
 191   1          LCD_WR_REG(0xD0);                                             //电源控制1
 192   1          LCD_WR_DATA8(0xA4);                                           //该参数不变
 193   1          LCD_WR_DATA8(0xA1);                                           //此处根据实际情况修改
 194   1      
 195   1          LCD_WR_REG(0xE0);                                             //正极性GAMMA调整
 196   1          LCD_WR_DATA8(0xD0);
 197   1          LCD_WR_DATA8(0x04);
 198   1          LCD_WR_DATA8(0x0D);
 199   1          LCD_WR_DATA8(0x11);
 200   1          LCD_WR_DATA8(0x13);
 201   1          LCD_WR_DATA8(0x2B);
 202   1          LCD_WR_DATA8(0x3F);
 203   1          LCD_WR_DATA8(0x54);
 204   1          LCD_WR_DATA8(0x4C);
 205   1          LCD_WR_DATA8(0x18);
 206   1          LCD_WR_DATA8(0x0D);
 207   1          LCD_WR_DATA8(0x0B);
 208   1          LCD_WR_DATA8(0x1F);
 209   1          LCD_WR_DATA8(0x23);
 210   1      
 211   1          LCD_WR_REG(0xE1);                                              //负极性GAMMA调整
 212   1          LCD_WR_DATA8(0xD0);
 213   1          LCD_WR_DATA8(0x04);
 214   1          LCD_WR_DATA8(0x0C);
 215   1          LCD_WR_DATA8(0x11);
 216   1          LCD_WR_DATA8(0x13);
 217   1          LCD_WR_DATA8(0x2C);
 218   1          LCD_WR_DATA8(0x3F);
 219   1          LCD_WR_DATA8(0x44);
 220   1          LCD_WR_DATA8(0x51);
 221   1          LCD_WR_DATA8(0x2F);
 222   1          LCD_WR_DATA8(0x1F);
 223   1          LCD_WR_DATA8(0x1F);
 224   1          LCD_WR_DATA8(0x20);
 225   1          LCD_WR_DATA8(0x23);
 226   1      
 227   1          LCD_WR_REG(0x21);                                             //反显开，默认是0X20，正常模式
 228   1      
 229   1          LCD_WR_REG(0x11);
 230   1      
 231   1          LCD_WR_REG(0x29);                                             //显示开，等待MCU数传送
 232   1      }
*** WARNING C294 IN LINE 112 OF lcd_init.c: unreachable code
*** WARNING C294 IN LINE 122 OF lcd_init.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    484    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.60.7.0   LCD_INIT                                                          12/12/2024 19:08:57 PAGE 5   

   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
