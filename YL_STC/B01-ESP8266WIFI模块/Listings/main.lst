C51 COMPILER V9.00   MAIN                                                                  09/05/2024 19:20:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\software\KEIL4\C51\BIN\C51.EXE main.c LARGE BROWSE INCDIR(.\LCD;.\SGP30) DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          #include "spi.h"
   3          #include "lcd.h"
   4          #include "lcd_init.h"
   5          
   6          #define S2_S0 0x01              //P_SW2.0
   7          #define S2RI  0x01              //S2CON.0
   8          #define S2TI  0x02              //S2CON.1
   9          
  10          u8 value_uart;
  11          u8 uart2str_buf[100];
  12          struct
  13          {
  14                  u8 ReceiveBuff[100];    //接收缓存数组
  15                  u8 ReceiveCount;                        //计算接收到的数据有多少字节
  16                  u8 timecount;                           //有多久没有接收到字节，数据断续的时间
  17                  u8 timerun;                                     //断续时间是否开始累加
  18                  u8 ReceiveComplete;     //一帧数据接收完成标志  
  19          }UART_CONFIG;
  20          
  21          void GPIO_Init(void)
  22          {
  23   1              P0M1 = 0x00;//设置P0端口模式
  24   1              P0M0 = 0xff;
  25   1              
  26   1              P1M1 = 0x00;//设置P1端口模式
  27   1              P1M0 = 0x00;
  28   1                          
  29   1              P2M1 = 0x00;//设置P2端口模式
  30   1              P2M0 = 0x00;
  31   1                          
  32   1              P3M1 = 0x00;//设置P3端口模式
  33   1              P3M0 = 0x00;
  34   1                          
  35   1              P4M1 = 0x00;//设置P4端口模式
  36   1              P4M0 = 0x00;
  37   1                          
  38   1              P5M1 = 0x00;//设置P5端口模式
  39   1              P5M0 = 0x00;  
  40   1      }
  41          
  42          void Timer0_Init(void)          //1毫秒@11.0592MHz
  43          {
  44   1              AUXR &= 0x7F;                   //定时器时钟12T模式
  45   1              TMOD &= 0xF0;                   //设置定时器模式
  46   1              TL0 = 0x66;                             //设置定时初始值
  47   1              TH0 = 0xFC;                             //设置定时初始值
  48   1              TF0 = 0;                                //清除TF0标志
  49   1              TR0 = 1;                                //定时器0开始计时
  50   1              ET0 = 1;                                //使能定时器0中断
  51   1      }
  52          
  53          //void Uart1Init(void)          //9600bps@11.0592MHz
  54          //{
C51 COMPILER V9.00   MAIN                                                                  09/05/2024 19:20:11 PAGE 2   

  55          //      SCON = 0x50;            //8位数据,可变波特率
  56          //      AUXR &= 0xBF;           //定时器时钟12T模式
  57          //      AUXR &= 0xFE;           //串口1选择定时器1为波特率发生器
  58          //      TMOD &= 0x0F;           //设置定时器模式
  59          //      TL1 = 0xE8;                     //设置定时初始值
  60          //      TH1 = 0xFF;                     //设置定时初始值
  61          //      ET1 = 0;                        //禁止定时器中断
  62          //      TR1 = 1;                        //定时器1开始计时
  63          //      TI = 1;
  64          //} 
  65          void Uart2Init(void)            //9600bps@11.0592MHz
  66          {
  67   1              P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
  68   1              S2CON = 0x50;           //8位数据,可变波特率
  69   1              AUXR &= 0xFB;           //定时器时钟12T模式
  70   1              T2L = 0xFE;                     //设置定时初始值
  71   1              T2H = 0xFF;                     //设置定时初始值
  72   1              AUXR |= 0x10;           //定时器2开始计时
  73   1              IE2 = 0x01;                 //使能串口2中断
  74   1      }
  75          
  76          void SendData(u8 dat)
  77          {
  78   1          S2BUF = dat;                 //写数据到UART数据寄存器
  79   1          while (!(S2CON & S2TI));               //等待前面的数据发送完成
  80   1                      S2CON &= ~S2TI;         //清除S2TI位
  81   1      }
  82          void SendString(char *s)
  83          {
  84   1          while (*s)                  //检测字符串结束标志
  85   1          {
  86   2              SendData(*s++);         //发送当前字符
  87   2          }
  88   1      }
  89          
  90          u8 wifi_init()
  91          {
  92   1              SendString("AT+RST\r\n");
  93   1              while(UART_CONFIG.ReceiveComplete!=1);
  94   1              UART_CONFIG.ReceiveComplete=0;
  95   1              sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
  96   1              Delayxms(500);
  97   1              while(!(strstr(uart2str_buf, "ready")))
  98   1              {
  99   2                      sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 100   2              }
 101   1              
 102   1              if(strstr(uart2str_buf, "ready"))
 103   1              {
 104   2                      SendString("AT+CWMODE=3\r\n");
 105   2                      Delayxms(500);
 106   2                      while(UART_CONFIG.ReceiveComplete!=1);
 107   2                      UART_CONFIG.ReceiveComplete=0;
 108   2                      memset(uart2str_buf, 0, sizeof uart2str_buf);
 109   2                      sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 110   2                      
 111   2                      if(strstr(uart2str_buf, "OK"))
 112   2                      {
 113   3                              SendString("AT+CWJAP=\"YLZN7777\",\"12456789\"\r\n");
 114   3                              Delayxms(4000);
 115   3                              while(UART_CONFIG.ReceiveComplete!=1);
 116   3                              UART_CONFIG.ReceiveComplete=0;
C51 COMPILER V9.00   MAIN                                                                  09/05/2024 19:20:11 PAGE 3   

 117   3                              memset(uart2str_buf, 0, sizeof uart2str_buf);
 118   3                              sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 119   3                              
 120   3                              if(strstr(uart2str_buf, "OK"))
 121   3                              {
 122   4                                      SendString("AT+CIPSTART=\"TCP\",\"192.168.100.25\",8234\r\n");
 123   4                                      Delayxms(4000);
 124   4                                      while(UART_CONFIG.ReceiveComplete!=1);
 125   4                                      UART_CONFIG.ReceiveComplete=0;
 126   4                                      memset(uart2str_buf, 0, sizeof uart2str_buf);
 127   4                                      sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 128   4                                      
 129   4                                      if(strstr(uart2str_buf, "OK"))
 130   4                                      {
 131   5                                              SendString("AT+CIPMODE=1\r\n");
 132   5                                              Delayxms(500);
 133   5                                              while(UART_CONFIG.ReceiveComplete!=1);
 134   5                                              UART_CONFIG.ReceiveComplete=0;
 135   5                                              memset(uart2str_buf, 0, sizeof uart2str_buf);
 136   5                                              sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 137   5                                              if(strstr(uart2str_buf, "OK"))
 138   5                                              {
 139   6                                                      SendString("AT+CIPSEND\r\n");
 140   6                                                      Delayxms(500);
 141   6                                                      while(UART_CONFIG.ReceiveComplete!=1);
 142   6                                                      UART_CONFIG.ReceiveComplete=0;
 143   6                                                      memset(uart2str_buf, 0, sizeof uart2str_buf);
 144   6                                                      sprintf(uart2str_buf,"%s",UART_CONFIG.ReceiveBuff);
 145   6                                                      if(strstr(uart2str_buf, "OK"))
 146   6                                                      {
 147   7                                                              return 1;
 148   7                                                      }
 149   6                                                      else{return 0;}
 150   6                                              }
 151   5                                              else{return 0;}
 152   5                                      }
 153   4                                      else{return 0;}
 154   4                              }
 155   3                              else{return 0;}
 156   3                      }
 157   2                      else{return 0;}
 158   2              }
 159   1              else{return 0;}
 160   1      }
 161          
 162          void main()
 163          {
 164   1              GPIO_Init();
 165   1              Timer0_Init();
 166   1              Uart2Init();
 167   1              EA = 1;
 168   1              SPI_Init();
 169   1              LCD_Init();//LCD初始化
 170   1              LCD_Clear1(BLACK);
 171   1              ESP8266_RST=1;
 172   1              while(wifi_init()!=1);
 173   1              while(1)
 174   1              {
 175   2                      LED3=0;
 176   2                      SendString("HELLO WORLD\r\n");
 177   2                      Delayxms(500);
 178   2              }
C51 COMPILER V9.00   MAIN                                                                  09/05/2024 19:20:11 PAGE 4   

 179   1      }
 180          
 181          void Timer0_Isr(void) interrupt 1
 182          {
 183   1              static unsigned int count1 = 0;
 184   1              if (++count1 >= 1000)
 185   1              {
 186   2                      count1 = 0;
 187   2              }
 188   1              ////UART超时时间，判断一帧数据接收完成///////////////////
 189   1              if(UART_CONFIG.timerun==1)
 190   1              {
 191   2                      UART_CONFIG.timecount++;
 192   2              }
 193   1              if(UART_CONFIG.timecount>=20)//20ms
 194   1              {
 195   2                      UART_CONFIG.timerun=0;
 196   2                      UART_CONFIG.timecount=0;
 197   2                      
 198   2                      UART_CONFIG.ReceiveCount=0;
 199   2                      UART_CONFIG.ReceiveComplete=1;
 200   2              }
 201   1      }
 202          void Uart2() interrupt 8
 203          {
 204   1          if (S2CON & S2RI)
 205   1          {
 206   2              S2CON &= ~S2RI;         //清除S2RI位
 207   2                                      value_uart = S2BUF;
 208   2                                      UART_CONFIG.ReceiveBuff[UART_CONFIG.ReceiveCount]=value_uart;
 209   2                                      UART_CONFIG.ReceiveCount++;
 210   2                                      if(UART_CONFIG.ReceiveCount==1)
 211   2                                      {
 212   3                                              UART_CONFIG.timerun=1;
 213   3                                      }
 214   2                                      UART_CONFIG.timecount=0;
 215   2          }
 216   1      }
 217          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1064    ----
   CONSTANT SIZE    =    152    ----
   XDATA SIZE       =    207       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
