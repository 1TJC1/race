C51 COMPILER V9.60.7.0   UART2                                                             06/28/2024 23:07:44 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART2
OBJECT MODULE PLACED IN .\Objects\uart2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UART2\uart2.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\LCD;.\UART2) DEBUG
                    - OBJECTEXTEND PRINT(.\Listings\uart2.lst) TABS(2) OBJECT(.\Objects\uart2.obj)

line level    source

   1          #include "uart2.h"
   2          #include "intrins.h"
   3          
   4          #define FOSC  11059200L          //系统频率
   5          #define BAUD  9600             //串口波特率
   6          
   7          #define NONE_PARITY     0       //无校验
   8          #define ODD_PARITY      1       //奇校验
   9          #define EVEN_PARITY     2       //偶校验
  10          #define MARK_PARITY     3       //标记校验
  11          #define SPACE_PARITY    4       //空白校验
  12          
  13          #define PARITYBIT NONE_PARITY   //定义校验位
  14          
  15          #define T1MS (65536-FOSC/1000)      //1T模式
  16          //#define T1MS (65536-FOSC/12/1000) //12T模式
  17          
  18          #define S2RI  0x01              //S2CON.0
  19          #define S2TI  0x02              //S2CON.1
  20          #define S2RB8 0x04              //S2CON.2
  21          #define S2TB8 0x08              //S2CON.3
  22          
  23          #define S2_S0 0x01              //P_SW2.0
  24          
  25          bit busy;
  26          
  27          unsigned char flag_updata=0; //用于定时发数据，或者定时闪烁工作LED灯
  28          unsigned int  time_updata=0;
  29          
  30          struct UART_SYS UART_CONFIG;
  31          /*----------------------------
  32          UART2 中断服务程序
  33          -----------------------------*/
  34          void Uart2() interrupt 8 //
  35          {
  36   1          if (S2CON & S2RI)
  37   1          {
  38   2            S2CON &= ~S2RI;         //清除S2RI位
  39   2      
  40   2            UART_CONFIG.ReceiveBuff[UART_CONFIG.ReceiveCount]=S2BUF;
  41   2            UART_CONFIG.ReceiveCount++;
  42   2            if(UART_CONFIG.ReceiveCount==1)
  43   2            {
  44   3              UART_CONFIG.timerun=1;
  45   3            }
  46   2            UART_CONFIG.timecount=0;
  47   2          }
  48   1          if (S2CON & S2TI)
  49   1          {
  50   2              S2CON &= ~S2TI;         //清除S2TI位
  51   2              busy = 0;               //清忙标志
  52   2          }
  53   1      }
  54          /* Timer0 interrupt routine */
C51 COMPILER V9.60.7.0   UART2                                                             06/28/2024 23:07:44 PAGE 2   

  55          void tm0_isr() interrupt 1 //1ms
  56          {
  57   1        time_updata++;
  58   1        if(time_updata>=2000)
  59   1        {
  60   2          time_updata=0;
  61   2          flag_updata=1;
  62   2        }
  63   1        
  64   1        if(UART_CONFIG.timerun==1)
  65   1        {
  66   2          UART_CONFIG.timecount++;
  67   2        }
  68   1        if(UART_CONFIG.timecount>=10)//10ms
  69   1        {
  70   2          UART_CONFIG.timerun=0;
  71   2          UART_CONFIG.timecount=0;
  72   2          
  73   2          UART_CONFIG.ReceiveCount=0;
  74   2          UART_CONFIG.ReceiveComplete=1;
  75   2        }
  76   1      }
  77          /*----------------------------
  78          发送串口数据
  79          ----------------------------*/
  80          void SendData(BYTE dat)
  81          {
  82   1          while (busy);               //等待前面的数据发送完成
  83   1          ACC = dat;                  //获取校验位P (PSW.0)
  84   1          if (P)                      //根据P来设置校验位
  85   1          {
  86   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON &= ~S2TB8;        //设置校验位为0
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON |= S2TB8;         //设置校验位为1
              #endif
  91   2          }
  92   1          else
  93   1          {
  94   2      #if (PARITYBIT == ODD_PARITY)
                      S2CON |= S2TB8;         //设置校验位为1
              #elif (PARITYBIT == EVEN_PARITY)
                      S2CON &= ~S2TB8;        //设置校验位为0
              #endif
  99   2          }
 100   1          busy = 1;
 101   1          S2BUF = ACC;                //写数据到UART2数据寄存器
 102   1      }
 103          
 104          /*----------------------------
 105          发送字符串
 106          ----------------------------*/
 107          void SendString(char *s)
 108          {
 109   1        while (*s)                  //检测字符串结束标志
 110   1        {
 111   2          SendData(*s++);         //发送当前字符
 112   2        }
 113   1      }
 114          void SendDatas(unsigned char *s,unsigned char len)
 115          {
 116   1        unsigned char i=0;
C51 COMPILER V9.60.7.0   UART2                                                             06/28/2024 23:07:44 PAGE 3   

 117   1        for(i=0;i<len;i++)
 118   1          SendData(s[i]);
 119   1      }
 120          
 121          void init_uart2()
 122          {
 123   1        ///////////////////////////串口2初始化////////////////////////////////////////////////////////
 124   1          P_SW2 &= ~S2_S0;            //S2_S0=0 (P1.0/RxD2, P1.1/TxD2)
 125   1      //  P_SW2 |= S2_S0;             //S2_S0=1 (P4.6/RxD2_2, P4.7/TxD2_2)
 126   1      
 127   1      #if (PARITYBIT == NONE_PARITY)
 128   1          S2CON = 0x50;               //8位可变波特率
 129   1      #elif (PARITYBIT == ODD_PARITY) || (PARITYBIT == EVEN_PARITY) || (PARITYBIT == MARK_PARITY)
                  S2CON = 0xda;               //9位可变波特率,校验位初始为1
              #elif (PARITYBIT == SPACE_PARITY)
                  S2CON = 0xd2;               //9位可变波特率,校验位初始为0
              #endif
 134   1      
 135   1          T2L = (65536 - (FOSC/4/BAUD));   //设置波特率重装值
 136   1          T2H = (65536 - (FOSC/4/BAUD))>>8;
 137   1          AUXR |= 0x14;                //T2为1T模式, 并启动定时器2
 138   1          IE2 = 0x01;                 //使能串口2中断
 139   1          EA = 1;
 140   1      }
 141          
 142          void init_time0()
 143          {
 144   1        //////////////////////定时器0初始化，自动重装载/////////////////////////////////////////////////////
 145   1          AUXR |= 0x80;                   //定时器0为1T模式
 146   1      //  AUXR &= 0x7f;                   //定时器0为12T模式
 147   1          TMOD |= 0x00;                    //设置定时器为模式0(16位自动重装载)
 148   1          TL0 = T1MS;                     //初始化计时值
 149   1          TH0 = T1MS >> 8;
 150   1          TR0 = 1;                        //定时器0开始计时
 151   1          ET0 = 1;                        //使能定时器0中断
 152   1          EA = 1;
 153   1      ///////////////////////////////////////////////////////////////////////////////////////////////   
 154   1          
 155   1      }
 156          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    307    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     57       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
